server.port=8080
server.session.timeout=60
server.error.path=/error

spring.http.encoding.charset=utf-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
#
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.url=jdbc:mysql://120.55.168.174:3306/zhaoyuncapital_cms
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.username=root
#spring.datasource.password=123456
#
##logging.level.tk.mybatis=TRACE
##logging.config=classpath:logback.xml.bak
#

#
## 下面为连接池的补充设置，应用到上面所有数据源中
#
## 初始化大小，最小，最大
#spring.datasource.initialSize=5
#spring.datasource.minIdle=5
#spring.datasource.maxActive=20
## 配置获取连接等待超时的时间
#spring.datasource.maxWait=60000
## 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#spring.datasource.timeBetweenEvictionRunsMillis=60000
## 配置一个连接在池中最小生存的时间，单位是毫秒
#spring.datasource.minEvictableIdleTimeMillis=300000
#spring.datasource.validationQuery=Select 1 from Dual
#spring.datasource.testWhileIdle=true
#spring.datasource.testOnBorrow=false
#spring.datasource.testOnReturn=false
## 打开PSCache，并且指定每个连接上PSCache的大小
#spring.datasource.poolPreparedStatements=true
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
## 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.filters=stat,wall,log4j,logback
## 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
#spring.jpa.database=mysql
#spring.jpa.show-sql=true
#
#spring.mvc.view.prefix=/WEB-INF/jsp/
#spring.mvc.view.suffix=.jsp
#
#spring.mvc.static-path-pattern=/WEB-INF/static/**
#spring.resources.static-locations=/WEB-INF/static
#
#spring.thymeleaf.cache=true
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.prefix=/WEB-INF/templates
#spring.thymeleaf.suffix=.html
#
#spring.freemarker.cache=false
#spring.freemarker.request-context-attribute=request
#
## mybatis.config：mybatis-config.xml配置文件的路径
## mybatis.typeHandlersPackage：扫描typeHandlers的包
## mybatis.checkConfigLocation：检查配置文件是否存在
## mybatis.executorType：设置执行模式（SIMPLE, REUSE, BATCH），默认为SIMPLE
##mybatis.type-aliases-package：Model包扫描位置
#mybatis.type-aliases-package=com.zhaoyuncapital.model
##mybatis.mapper-locations：xml文件扫描位置
#mybatis.mapper-locations=classpath:mapper/*.xml
#mapper.mappers=com.zhaoyuncapital.util.MyMapper
#mapper.not-empty=false
#mapper.identity=MYSQL


logging.level.tk.mybatis=TRACE
druid.url=jdbc:mysql://120.55.168.174:3306/zhaoyuncapital_cms
druid.driver-class=com.mysql.jdbc.Driver
druid.username=root
druid.password=123456
druid.initial-size=1
druid.min-idle=1
druid.max-active=20
druid.test-on-borrow=true
spring.mvc.view.prefix=/templates/
spring.mvc.view.suffix=.ftl
spring.freemarker.cache=false
spring.freemarker.request-context-attribute=request
mybatis.type-aliases-package=com.zhaoyuncapital.model
mybatis.mapper-locations=classpath:mapper/*.xml
mapper.mappers=com.zhaoyuncapital.util.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql